CREATE TABLE accounts (
  user_id SERIAL PRIMARY KEY,
  username VARCHAR (50) UNIQUE NOT NULL,
  password VARCHAR (50) NOT NULL,
  email VARCHAR (255) UNIQUE NOT NULL,
  created_at TIMESTAMP NOT NULL,
  last_login TIMESTAMP
);


INSERT INTO accounts (username, password, email, created_at, last_login) 
VALUES 

('john_doe', 'John@123', 'john.doe@example.com', '2025-04-18 10:30:00', '2025-04-18 12:45:00'),
('alice_smith', 'Alice@456', 'alice.smith@example.com', '2025-04-17 09:15:00', '2025-04-18 08:00:00');

select * from accounts

CREATE TABLE fruits(
   id SERIAL PRIMARY KEY,
   name VARCHAR NOT NULL
);

INSERT INTO fruits(name)
VALUES('Orange');

INSERT INTO fruits(name)
VALUES(2,'Apple');

select * from fruits



CREATE TABLE sales_invoices (    
invoice_id  PRIMARY KEY,    
customer_name VARCHAR NOT NULL);


CREATE TABLE purchase_invoices (    
invoice_id  PRIMARY KEY,    
supplier_name VARCHAR NOT NULL); 


CREATE SEQUENCE invoice_seq
START 1
INCREMENT 1

INSERT INTO sales_invoices(invoice_id, customer_name)
VALUES (NEXTVAL('invoice_seq'), 'ABC Corp');

select * from sales_invoices

select * from purchase_invoices


INSERT INTO purchase_invoices(invoice_id, supplier_name)
VALUES (NEXTVAL('invoice_seq'), 'XYZ Suppliers');


CREATE TABLE color (
    color_id INT GENERATED ALWAYS AS IDENTITY,
    color_name VARCHAR NOT NULL
);


);

INSERT INTO color(color_name)
VALUES ('Red');

select * from color


DROP TABLE color;

CREATE TABLE color (
    color_id INT GENERATED BY DEFAULT AS IDENTITY,
    color_name VARCHAR NOT NULL
);


INSERT INTO color(color_name)
VALUES ('White');

INSERT INTO color (color_id, color_name)VALUES (2, 'Yellow');

CHECK, UNIQUE, DEFAULT CONSTRAINT
CREATE TABLE students (
    student_id SERIAL PRIMARY KEY,              -- Primary Key
    full_name VARCHAR(100) NOT NULL,            -- Cannot be NULL
    email VARCHAR(100) UNIQUE NOT NULL,         -- Must be unique and not null
    age INT CHECK (age >= 5 AND age <= 100),    -- Age must be between 5 and 100
   grade CHAR(1) CHECK (grade IN ('A', 'B', 'C', 'D', 'F')),
    enrollment_status BOOLEAN DEFAULT TRUE      -- Default value is TRUE
);


INSERT INTO enrollment(student_id, course_id, enrollment_date)
VALUES (1,2,'2022-04-01'),
 (1,3,'2022-04-01');


 ---Day2--

CREATE TABLE departments (
    dept_id SERIAL PRIMARY KEY,
    dept_name VARCHAR(100)
);

CREATE TABLE employees (
    employee_id SERIAL PRIMARY KEY,
    name VARCHAR(100),
    dept_id INT,
    FOREIGN KEY (dept_id) REFERENCES departments(dept_id)
);


CREATE TABLE enrollment (
    student_id INT,
    course_id INT,
    enrollment_date DATE,
    PRIMARY KEY(student_id, course_id));

	
CREATE TABLE grades (
    student_id INT,
    course_id INT,
    grade CHAR(1),
    PRIMARY KEY (student_id, course_id),
    FOREIGN KEY (student_id, course_id) REFERENCES enrollment(student_id, course_id)
);


-- Alter Tables--


CREATE TABLE links (
   link_id serial PRIMARY KEY,
   title VARCHAR (512) NOT NULL,
   url VARCHAR (1024) NOT NULL
);

ALTER TABLE links
ADD COLUMN active boolean;


ALTER TABLE links
RENAME COLUMN title TO link_title;

ALTER TABLE links
DROP COLUMN active;

ALTER TABLE IF EXISTS links
RENAME TO new_links;


-- Change the Data type of column

ALTER TABLE new_links
ALTER COLUMN link_title
SET DATA TYPE text;


DROP TABLE IF EXISTS new_links;

-- Generated Columns


CREATE TABLE contacts(
   id SERIAL PRIMARY KEY,
   first_name VARCHAR(50) NOT NULL,
   last_name VARCHAR(50) NOT NULL,
   full_name VARCHAR(101) GENERATED ALWAYS AS (first_name || ' ' || last_name) STORED,
   email VARCHAR(300) UNIQUE
);

INSERT INTO contacts(first_name, last_name, email)
VALUES
   ('John', 'Doe', 'john.doe@example.com'),
   ('Jane', 'Doe', 'jane.doe@example.com');

   select * from contacts;
  


CREATE TEMP TABLE mytemp(id INT);

INSERT INTO mytemp(id) VALUES
(1), (2), (3);

 select * from mytemp;

TRUNCATE TABLE mytemp

create table employees(
employeeid serial primary key,
linkedin_url varchar);

Alter table employees
ALTER COLUMN linkedin_url
SET DATA TYPE text;

ALTER TABLE employees
ALTER COLUMN linkedin_url SET NOT NULL;

ALTER TABLE employees
ADD CONSTRAINT linkedin_url UNIQUE (linkedin_url);

insert into employees(linkedin_url) values
(NULL);








)

-- Modifying Data